<?php
/**
 * @file
 * Code for the Serignan Commons feature.
 */

include_once 'serignan_commons.features.inc';

// -----------------------------------------------------------------------------
// HOOKS

/**
 * Implements hook_menu().
 */
function serignan_commons_menu() {
  $menu = array();
  $menu['front'] = array(
    'title' => '',
    'page callback' => '_serignan_commons_front',
    'access callback' => TRUE,
  );
  return $menu;
}

/**
 * Implements hook_ds_fields_info().
 */
function serignan_commons_ds_fields_info($entity_type) {
  $fields = array();

  $fields['type'] = array(
    'title' => t('Type'),
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'function' => '_serignan_commons_ds_field_type',
  );

  return array('node' => $fields);
}

/*
 * Implements hook_date_format_types().
 */
function serignan_commons_date_format_types() {
  variable_set('date_format_date_court', 'd/m/Y'); 
  variable_set('date_format_date_long', 'l j F Y'); 
  variable_set('date_format_format_serignan', 'l, j F, Y - H:i'); 
  return array(
    'date_court' => t('Date court'), 
    'date_long' => t('Date long'), 
    'format_serignan' => t('Format serignan'),
  );
}

/*
 * Implements hook_date_formats().
 */
function serignan_commons_date_formats() {
  $formats = array();

  // Short date formats.
  $formats[] = array(
    'type' => 'date_court',
    'format' => 'd/m/Y',
    'locales' => array(),
  );
  $formats[] = array(
    'type' => 'date_long',
    'format' => 'l j F Y',
    'locales' => array(),
  );
  $formats[] = array(
    'type' => 'format_serignan',
    'format' => 'l, j F, Y - H:i',
    'locales' => array(),
  );

  return $formats;
}

// -----------------------------------------------------------------------------
// CALLBACKS

/**
 * Front menu callback
 */
function _serignan_commons_front() {
  $result = '';
  if (module_exists('metatag')) {
    $result .= drupal_render(metatag_metatags_view('global:frontpage', array()));
  }
  return $result;
}

/**
 * Type field callback
 */
function _serignan_commons_ds_field_type($field) {
  if (!empty($field['entity'])) {
    return node_type_get_name($field['entity']);
  }
}


// -----------------------------------------------------------------------------
// CRUMBS

/**
 * Implements hook_crumbs_plugins()
 */
function serignan_commons_crumbs_plugins($api) {
  // Just one plugin for the entire module.
  $api->monoPlugin();
}


/**
 * Implementation of class hook class_CrumbsParentFinder
 * on the behalf of path module.
 */
class serignan_commons_CrumbsMonoPlugin implements crumbs_MonoPlugin {

  function describe($api) {
    return t('Special breadcrumb for search paths.');
  }

  function disabledByDefault() {
    return FALSE;
  }

  function findParent($path, $item) {
    $parts = explode('/', $path);
    if ($parts[0] == 'search') {
      if (count($parts) > 2) {
        return 'search/' . $parts[1];
      }
      elseif (count($parts) == 2) {
        return 'search';
      }      
    }
  }

  function findTitle($path, $item) {
    $parts = explode('/', $path);
    if ($parts[0] == 'search') {
      if (count($parts) > 2) {
        return t('Results');
      }
      elseif (count($parts) == 2) {
        return t('Search') . ' ' . t(ucfirst($parts[1])); 
      }
      elseif (count($parts) == 1) {
        return t('Search');
      }      
    }
  }
}
